{\rtf1\ansi\ansicpg1252\cocoartf2758
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 To use the "Public Sans" font in Flutter and apply a linear gradient to the text, you'll need to follow these steps:\
\
### Adding the Font to Your Flutter Project\
1. Obtain the "Public Sans" font files and place them in a folder within your project (e.g., `assets/fonts/PublicSans/`).\
2. Declare the font in your `pubspec.yaml` file:\
\
```yaml\
flutter:\
  fonts:\
    - family: PublicSans\
      fonts:\
        - asset: assets/fonts/PublicSans/PublicSans-Regular.ttf\
        - asset: assets/fonts/PublicSans/PublicSans-Bold.ttf\
          weight: 700\
```\
\
Make sure the paths match where you've placed the font files.\
\
### Using the Font in Your Widget\
Once the font is added, you can use it in your `TextStyle`:\
\
```dart\
TextStyle(\
  fontFamily: 'PublicSans',\
  fontWeight: FontWeight.bold, // Use FontWeight to specify the weight, if necessary\
  // Other style properties\
)\
```\
\
### Applying a Linear Gradient to the Text\
Flutter's `Text` widget does not directly support gradients. You need to use the `ShaderMask` widget to apply a shader to the `Text` widget's text. Here's how you can apply a linear gradient to text:\
\
```dart\
ShaderMask(\
  shaderCallback: (bounds) => LinearGradient(\
    colors: [Color(0xFF...), Color(0xFF...)], // Replace with your gradient colors\
    begin: Alignment.centerLeft,\
    end: Alignment.centerRight,\
  ).createShader(Rect.fromLTWH(0, 0, bounds.width, bounds.height)),\
  child: Text(\
    'Login',\
    style: TextStyle(\
      color: Colors.white, // This color is a placeholder, the shader will override it\
      fontSize: 34,\
      fontWeight: FontWeight.bold,\
      fontFamily: 'PublicSans',\
    ),\
  ),\
)\
```\
\
Replace `Color(0xFF...)` with the actual hexadecimal color values that you want to use for your gradient.\
\
Here's how you can apply all of this to your "Login" text in the existing code:\
\
```dart\
Positioned(\
  bottom: MediaQuery.of(context).size.height * 0.5,\
  left: 20,\
  child: ShaderMask(\
    shaderCallback: (bounds) => LinearGradient(\
      colors: [Color(0xFF...), Color(0xFF...)], // Replace with your gradient colors\
      begin: Alignment.centerLeft,\
      end: Alignment.centerRight,\
    ).createShader(Rect.fromLTWH(0, 0, bounds.width, bounds.height)),\
    child: Text(\
      'Login',\
      style: TextStyle(\
        // The color must be set to white or a light color to blend it with the shader\
        color: Colors.white,\
        fontSize: 34,\
        fontWeight: FontWeight.bold,\
        fontFamily: 'PublicSans',\
      ),\
    ),\
  ),\
)\
```\
\
For the actual colors, you'll need to extract the color values from the image you've uploaded. If you're unsure of the specific colors, you can use an image editing tool or an online color picker to sample the colors from your gradient image. Once you have the hexadecimal values, replace `Color(0xFF...)` with the correct color codes.\
\
Please note that the `shaderCallback` function creates a shader that matches the size of the text bounds, ensuring the gradient is properly applied to the text.}